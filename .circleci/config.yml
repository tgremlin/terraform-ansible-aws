version: 2.1
orbs:
  slack: circleci/slack@4.4.4
jobs:
  slack/on-hold:

  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - checkout
      - run:
          name: run AWS configure
          command: |
            aws configure --profile staging set region $AWS_DEFAULT_REGION
            aws configure --profile staging set access_key $AWS_ACCESS_KEY_ID
            aws configure --profile staging set secret_key $AWS_SECRET_ACCESS_KEY  
      - run:
          name: save AWS secrets ssh private key to file
          command: |
            aws secretsmanager get-secret-value --secret-id $AWS_SECRET_SSH --query 'SecretString' --output text > /tmp/project/ansible/roles/common/files/deployer.pem             
      - run:
          name: terraform init & plan
          command: |
            pwd
            terraform init -input=false
            terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
      - slack/notify:
          event: fail
          mentions: '@tenisonallan'
          template: basic_fail_1



  apply:   
    working_directory: /tmp/project  
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .
      - slack/notify:
          event: pass
          mentions: '@tenisonallan'
          template: basic_success_1
      - slack/notify:
          event: fail
          mentions: '@tenisonallan'
          template: basic_fail_1

  plan-destroy: 
    working_directory: /tmp/project
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy
      - persist_to_workspace:
          root: .
          paths:
            - .
      - slack/notify:
          event: fail
          mentions: '@tenisonallan'
          template: basic_fail_1

  destroy:
    working_directory: /tmp/project
    docker:
      - image: tgremlin82/terraform_ansible_aws:1.0
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy
      - slack/notify:
          event: pass
          mentions: '@tenisonallan'
          template: basic_success_1
      - slack/notify:
          event: fail
          mentions: '@tenisonallan'
          template: basic_fail_1
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - slack/on-hold:
          mentions: '@tenisonallan'
          requires:
            - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
            - slack/on-hold
      - apply:
          requires:
            - hold-apply
      - plan-destroy:
          requires:
            - apply
      - slack/on-hold:
          mentions: '@tenisonallan'
          requires:
            - hold-destroy
      - hold-destroy:
          type: approval
          requires:
            - plan-destroy
      - destroy:
          requires:
            - hold-destroy
          